<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Centos - nginx - php - mysql - redis]]></title>
    <url>%2Fposts%2Fc210a9da.html</url>
    <content type="text"><![CDATA[Centos - nginx - php - mysql - redis centosCentOS-7-x86_64-Minimal-1908.iso nginxnginx-1.16.1.tar.gztengine-2.3.2.tar.gzopenresty-1.15.8.1.tar.gz phpphp-7.3.9.tar.gzcmake-3.15.3.tar.gzlibzip-1.5.2.tar.gzswoole-src-4.4.6.tar.gz mysqlredisredis-5.0.5.tar.gzphpredis-5.0.2.tar.gz 脚本安装1sed -i 's/\r$//' lnmp.sh 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330#!/bin/shyum clean all #clear yumyum -y update #update yumyum -y install lrzsz #xshellyum -y install gcc gcc-c++ autoconf automake libtool make cmake vim wget zip unzipyum -y install zlib zlib-devel openssl openssl-devel pcre-devel yum -y install epel-releaseyum -y install libxml2 libxml2-devel openssl openssl-devel bzip2 bzip2-devel libcurl libcurl-devel libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel gmp gmp-devel libmcrypt libmcrypt-devel readline readline-devel libxslt libxslt-devel libzip libX11#centos 80firewall-cmd --zone=public --add-port=80/tcp --permanentfirewall-cmd --reload#----------------------tengine--------------------------------cd ~#tengine服务器的安装wget -c http://tengine.taobao.org/download/tengine-2.3.2.tar.gztar zxvf tengine*groupadd nginxuseradd -g nginx -M tenginecd tengine*./configure --prefix=/usr/local/tengine \--pid-path=/usr/local/tengine/run/nginx.pid \--with-http_ssl_module \--user=tengine \--group=nginx \--with-pcre make&amp;&amp;make install/usr/local/tengine/sbin/nginx -c /usr/local/tengine/conf/nginx.confecho '[Unit]Description=tengine - high performance web serverAfter=network.target remote-fs.target nss-lookup.target[Service]Type=forkingPIDFile=/usr/local/tengine/run/nginx.pidExecStartPre=/usr/local/tengine/sbin/nginx -t -c /usr/local/tengine/conf/nginx.confExecStart=/usr/local/tengine/sbin/nginx -c /usr/local/tengine/conf/nginx.confExecReload=/usr/local/tengine/sbin/nginx -s reloadExecStop=/usr/local/tengine/sbin/nginx -s stopExecQuit=/usr/local/tengine/sbin/nginx -s quitPrivateTmp=true[Install]WantedBy=multi-user.target ' &gt; /usr/lib/systemd/system/tengine.servicechmod +x /usr/lib/systemd/system/tengine.servicesystemctl enable tengine/usr/local/tengine/sbin/nginx -s stopsystemctl restart tengine#-------------------------nginx-----------------------------cd ~wget -c http://nginx.org/download/nginx-1.16.1.tar.gztar zxvf nginx*useradd -g nginx -M nginxcd nginx*./configure --prefix=/usr/local/nginx \--pid-path=/usr/local/nginx/run/nginx.pid \--with-http_ssl_module \--user=nginx \--group=nginx \--with-pcre make&amp;&amp;make install/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.confecho '[Unit]Description=nginx - high performance web serverAfter=network.target remote-fs.target nss-lookup.target[Service]Type=forkingPIDFile=/usr/local/nginx/run/nginx.pidExecStartPre=/usr/local/nginx/sbin/nginx -t -c /usr/local/nginx/conf/nginx.confExecStart=/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.confExecReload=/usr/local/nginx/sbin/nginx -s reloadExecStop=/usr/local/nginx/sbin/nginx -s stopExecQuit=/usr/local/nginx/sbin/nginx -s quitPrivateTmp=true[Install]WantedBy=multi-user.target ' &gt; /usr/lib/systemd/system/nginx.servicechmod +x /usr/lib/systemd/system/nginx.service/usr/local/nginx/sbin/nginx -s stopsystemctl enable nginxsystemctl restart nginx#---------------------------openresty---------------------------cd ~wget -c https://openresty.org/download/openresty-1.15.8.1.tar.gztar zxvf openresty*useradd -g nginx -M openrestycd openresty*./configure --prefix=/usr/local/openresty \--pid-path=/usr/local/openresty/run/nginx.pid \--with-http_ssl_module \--user=openresty \--group=nginx \--with-pcre make&amp;&amp;make install/usr/local/openresty/nginx/sbin/nginx -c /usr/usr/local/openresty/nginx/conf/nginx.confecho '[Unit]Description=openresty - high performance web serverAfter=network.target remote-fs.target nss-lookup.target[Service]Type=forkingPIDFile=/usr/local/openresty/run/nginx.pidExecStartPre=/usr/local/openresty/nginx/sbin/nginx -t -c /usr/local/openresty/nginx/conf/nginx.confExecStart=/usr/local/openresty/nginx/sbin/nginx -c /usr/local/openresty/nginx/conf/nginx.confExecReload=/usr/local/openresty/nginx/sbin/nginx -s reloadExecStop=/usr/local/openresty/nginx/sbin/nginx -s stopExecQuit=/usr/local/openresty/nginx/sbin/nginx -s quitPrivateTmp=true[Install]WantedBy=multi-user.target ' &gt; /usr/lib/systemd/system/openresty.servicechmod +x /usr/lib/systemd/system/openresty.servicesystemctl enable openresty/usr/local/openresty/nginx/sbin/nginx -s stopsystemctl restart openresty#---------------------------php7---------------------------cd ~wget -c https://github.com/Kitware/CMake/releases/download/v3.15.3/cmake-3.15.3.tar.gztar -zxvf cmake*cd cmake*./bootstrapmake &amp;&amp; make installcmake --versionhash -ryum remove libzip -ycd ~wget https://libzip.org/download/libzip-1.5.2.tar.gztar -zxvf libzip*cd libzip*mkdir buildcd buildcmake ..make &amp;&amp; make installecho "/usr/local/lib64" &gt;&gt; /etc/ld.so.conf echo "/usr/local/lib" &gt;&gt; /etc/ld.so.conf echo "/usr/lib" &gt;&gt; /etc/ld.so.conf echo "/usr/lib64" &gt;&gt; /etc/ld.so.confldconfig -v # 使之生效cd ~wget -c https://github.com/php/php-src/archive/php-7.3.9.tar.gztar -xzvf php*cd php*./configure --help./configure --prefix=/usr/local/php73 \--with-config-file-path=/usr/local/php73/etc \--with-config-file-scan-dir=/usr/local/php73/etc/php.d \--with-mcrypt \--enable-mysqlnd \--enable-fpm \--with-fpm-user=nginx \--with-fpm-group=nginx \--enable-xml \--enable-pcntl \--enable-zip \--enable-inline-optimization \--disable-debug \--disable-rpath \--enable-shared \--enable-soap \--with-xmlrpc \--with-openssl \--with-pcre-regex \--with-sqlite3 \--with-zlib \--enable-bcmath \--with-iconv \--with-bz2 \--enable-calendar \--with-curl \--with-cdb \--enable-dom \--enable-exif \--enable-fileinfo \--enable-filter \--with-pcre-dir \--enable-ftp \--with-gd \--with-openssl-dir \--with-jpeg-dir \--with-png-dir \--with-freetype-dir \--enable-gd-native-ttf \--enable-gd-jis-conv \--with-gettext \--with-gmp \--with-mhash \--enable-json \--enable-mbstring \--enable-mbregex \--enable-mbregex-backtrack \--with-libmbfl \--with-onig \--enable-pdo \--with-mysqli=mysqlnd \--with-pdo-mysql=mysqlnd \--with-zlib-dir \--with-pdo-sqlite \--with-readline \--enable-session \--enable-shmop \--enable-simplexml \--enable-sockets \--enable-sysvmsg \--enable-sysvsem \--enable-sysvshm \--enable-wddx \--with-libxml-dir \--with-xsl \--enable-mysqlnd-compression-support \--with-pear \--enable-opcachemake &amp;&amp; make install/usr/local/php73/bin/php -v/usr/local/php73/bin/php -i | grep php.inicp php.ini-production /usr/local/php73/etc/php.ini/usr/local/php73/bin/php -i | grep php.inicd /usr/local/php73/etccp php-fpm.conf.default php-fpm.confcp php-fpm.d/www.conf.default php-fpm.d/www.confcd ~/php*cp sapi/fpm/php-fpm.service /usr/lib/systemd/system/php-fpm.servicesystemctl start php-fpm.servicesystemctl enable php-fpm.servicecp sapi/fpm/php-fpm.service /usr/lib/systemd/system/php-fpm-73.servicesystemctl enable php-fpm-73.servicesystemctl start php-fpm-73.service#添加全局#export PATH=$PATH:/usr/local/php73/binecho -e 'export PATH=/usr/local/php73/bin/:/usr/local/php73/sbin/:$PATH' &gt;&gt; /etc/profile &amp;&amp; source /etc/profilesource /etc/profile#pecl install swoolecd ~wget https://github.com/swoole/swoole-src/archive/v4.4.6.tar.gztar -zxvf swoole*cd swoole*make cleanphpizewhich php-config #/usr/local/php73/bin/php-config./configure --with-php-config=/usr/local/php73/bin/php-configmake &amp;&amp; make installyum -y remove mysql80-community-release-el7-1.noarchwget http://repo.mysql.com/mysql80-community-release-el7-3.noarch.rpmyum -y localinstall mysql80-community-release-el7-3.noarch.rpmyum repolist all | grep mysqlyum -y install mysql-community-serversystemctl start mysqld.servicefirewall-cmd --zone=public --add-port=3306/tcp --permanentfirewall-cmd --reload#-----------------------redis------------------------------cd ~wget -c http://download.redis.io/releases/redis-5.0.5.tar.gztar zxvf redis*cd redis*./configure --prefix=/usr/local/redismv redis-5.0.5 /usr/local/rediscd /usr/local/redismake &amp;&amp; make installcd ~#wget -c https://github.com/phpredis/phpredis/archive/5.0.2.tar.gztar -zxvf phpredis*cd phpredis* # 进入 phpredis 目录make cleanphpizewhich php-config #/usr/local/php73/bin/php-config./configure --with-php-config=/usr/local/php73/bin/php-configmake &amp;&amp; make installwget https://dl.laravel-china.org/composer.phar -O /usr/local/bin/composerchmod a+x /usr/local/bin/composercurl -sS https://getcomposer.org/installer | phpcp composer.phar /usr/local/bin/composercomposer config -g repo.packagist composer https://mirrors.aliyun.com/composer/#centos 9501firewall-cmd --zone=public --add-port=9501/tcp --permanentfirewall-cmd --reload]]></content>
      <categories>
        <category>linux</category>
        <category>php</category>
      </categories>
      <tags>
        <tag>lnmp</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo ->Next]]></title>
    <url>%2Fposts%2F1b2993f2.html</url>
    <content type="text"><![CDATA[基于hexo，Next主题，在GitHub平台下创建个人博客 注册GitHub账号创建repository为 账号名.github.io setting &gt; option &gt; GitHub Pages&gt;&gt;choose a theme 本地创建hexo项目1234567891011121314151617181920npm install hexo-cli -gmkdir hexohexo init hexocd hexonpm installhexo servergit clone https://github.com/theme-next/hexo-theme-next themes/nextnpm install hexo-abbrlink --savenpm install hexo-generator-searchdb --savenpm install hexo-symbols-count-time --savenpm install hexo-helper-live2d --savenpm install live2d-widget-model-hijiki --savenpm install live2d-widget-model-tororo --savenpm install live2d-widget-model-shizuku --savenpm install live2d-widget-model-z16 --savehexo new page categorieshexo new page tags 配置git信息123git config --global user.name "账号名"git config --global user.name "注册的邮箱"ssh-keygen -t rsa -C "注册的邮箱" 项目的_config.yml1234567npm install hexo-deployer-git --save#https://hexo.io/docs/deployment.htmldeploy: type: git repo: https://github.com/账号名/账号名.github.io.git branch: master]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
